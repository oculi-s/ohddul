@import 'variables.module.scss';

*::-webkit-scrollbar {
    display: none;
}

// navHeight가 필요한 이유? 
// grouptree를 fixed로 했을 때 문제가 생김
// curtain에도 문제 생김
@include mobtab {
    :root {
        --side-margin: 0;
        --nav-height: 85px;
        --top: 100px;
    }

    main {
        tr>* {
            padding: 5px 8px;
        }
    }

    body {
        font-size: 14px;
    }

    .mh {
        display: none !important;
    }
}

@include desktop {
    :root {
        --side-margin: calc((100% - #{$mainWidth} - #{$navWidth} - 40px) / 2);
        --nav-height: 60px;
        --top: 110px;
    }

    main {
        tr>* {
            padding: 5px 10px;
        }

        min-height: 1300px;
    }

    body {
        font-size: 16px;
    }

    .ph {
        display: none !important;
    }
}

.react-financial-charts {
    .react-financial-charts-zoom-buttons {
        circle {
            cursor: pointer;
        }
    }

    .react-financial-charts-y-axis {
        cursor: ns-resize;
    }
}

.shareMermaid {
    height: 100% !important;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: auto;
    min-width: 100%;

    path {
        stroke-opacity: .5;
    }

    >* {
        display: flex;
        justify-content: center;
        height: 100% !important;
    }

    >*,
    svg {
        width: 100%;
    }


    .flowchart-label {

        rect {
            fill: $bgDark !important;
            stroke: $bgDark !important;
            rx: 10 !important;
            stroke-width: 10 !important;
        }

        .label-container {
            fill: $bgBright !important;
            stroke: none !important;
        }
    }

    .nodeLabel {

        &,
        span {
            color: $textColor !important;
        }
    }

    .subgraph {
        stroke-width: 10 !important;
        rx: 10 !important;


        rect {
            fill: $bgDark !important;
            stroke: $bgDark !important;
            padding: 10px;
        }

        &.subgraph-lvl-1 {
            fill: $bgMid !important;
            stroke: $bgMid !important;
        }

        .nodeLabel {
            color: $textBright !important;
            font-weight: bold;
        }
    }

    .edgeLabel {
        background: $bgDark !important;
        color: $textBright !important;

        * {
            overflow: visible;
        }

        z-index: -1;

        &:hover {
            * {
                z-index: 9999;
            }

            >.d {
                display: block !important;
                position: absolute;
                top: 0;
                left: 0;
                background: $bgDark;
                z-index: 999;
            }
        }
    }

    .flowchart-link {}
}

.katex-html {
    display: none;
}

h1,
h2,
h3,
h4 {
    scroll-margin-top: calc(var(--nav-height) + 10px);
    color: $textBright;

    * {
        color: $textBright;
    }
}

h2 {
    margin-top: 0;
    margin-bottom: 0;
    padding-bottom: 10px;
}

p {
    margin: 0;
}

main img {
    max-width: 100%;
    width: auto;
    height: auto;
}

canvas {
    max-height: unset;
    cursor: crosshair;
}

i {
    width: 1em;
    height: 1em;
    cursor: pointer;
    display: inline-block;
}

a:not(:hover) {
    text-decoration: none;
}

button:focus,
input:focus {
    outline: none;
}

.d {
    display: none;
}

.bold,
.bold * {
    color: $textBright;
    font-weight: bold;
}

.red,
.red * {
    color: $red !important;
}

.blue,
.blue * {
    color: $blue !important;
}

.yellow,
.yellow * {
    color: yellow !important;
}

.des {
    text-align: right;
    font-size: .8em;
    margin: 0;
}

hr {
    border: 1px solid $borderColor;
    clear: both;
}

.clear::after {
    content: '';
    display: block;
    clear: both;
}

dialog {
    background: none;
    border: none;
}

button,
a,
label {
    cursor: pointer;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input {
    background: none;
    border: none;
}

button {
    background: none;
    border: none;
}

.unranked,
.unranked * {
    color: $unranked !important;
}

.bronze,
.bronze * {
    color: $bronze !important;
}

.silver,
.silver * {
    color: $silver !important;
}

.gold,
.gold * {
    color: $gold !important;
}

.platinum,
.platinum * {
    color: $platinum !important;
}

.diamond,
.diamond * {
    color: $diamond !important;
}

.master,
.master * {
    color: $master !important;
}

.bg-unranked {
    background: $unranked;
}

.bg-bronze {
    background: $bronze;
}

.bg-silver {
    background: $silver;
}

.bg-gold {
    background: $gold;
}

.bg-platinum {
    background: $platinum;
}

.bg-diamond {
    background: $diamond;
}

.bg-master {
    background: $master;
}